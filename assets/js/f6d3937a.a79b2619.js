"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[774],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,d=m["".concat(s,".").concat(u)]||m[u]||g[u]||i;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},840:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:3.02,sidebar_label:"D2SV client to server logging"},o="D2SV client to server logging",l={unversionedId:"general/samples/3_02_client_to_server_logging",id:"general/samples/3_02_client_to_server_logging",isDocsHomePage:!1,title:"D2SV client to server logging",description:"D2SV UI uses log4javascript to enable logging for UI components. By default, the library is configured to channel log output to web browser",source:"@site/articles/general/samples/3_02_client_to_server_logging.md",sourceDirName:"general/samples",slug:"/general/samples/3_02_client_to_server_logging",permalink:"/general/samples/3_02_client_to_server_logging",tags:[],version:"current",sidebarPosition:3.02,frontMatter:{sidebar_position:3.02,sidebar_label:"D2SV client to server logging"},sidebar:"general",previous:{title:"D2SV Read-Only Permission View Sample",permalink:"/general/samples/3_04_read_only_permission"},next:{title:"D2SV Cutom Dialogs(D2FS) sample",permalink:"/general/samples/3_03_custom_dialog"}},s=[{value:"Instruction to try out the sample",id:"instruction-to-try-out-the-sample",children:[]},{value:"Source code structure",id:"source-code-structure",children:[]}],p={toc:s};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"d2sv-client-to-server-logging"},"D2SV client to server logging"),(0,a.kt)("p",null,"D2SV UI uses ",(0,a.kt)("inlineCode",{parentName:"p"},"log4javascript"),' to enable logging for UI components. By default, the library is configured to channel log output to web browser\nconsole. In the past while debugging for some issue in D2 Smartview, we felt the need to correlate this client-side log output with server-side log\noutput generated by back-end components and usually saved in "D2-Smartview.log" file. Driven by this need, we\'ve created this sample plugin which\nre-configures the ',(0,a.kt)("inlineCode",{parentName:"p"},"log4javascript")," and channels the log output to the same server-side log file. Key concepts explored in this plugin are"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"REST endpoint with un-conventional input/output."),(0,a.kt)("li",{parentName:"ul"},"RequireJS module re-configuration")),(0,a.kt)("h3",{id:"instruction-to-try-out-the-sample"},"Instruction to try out the sample"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Build the plugin using ",(0,a.kt)("inlineCode",{parentName:"li"},"npm run build")," from SDK workspace root."),(0,a.kt)("li",{parentName:"ul"},"Copy ",(0,a.kt)("inlineCode",{parentName:"li"},"D2SV-Client2Server-Logging-1.0.0.jar"),' from "dist" folder in workspace root and paste it inside ',(0,a.kt)("inlineCode",{parentName:"li"},"WEB-INF/lib")," folder of a deployed D2 Smartview application."),(0,a.kt)("li",{parentName:"ul"},'Edit D2 Smartview logging configuration file "logback.xml" and set the root logging level to ',(0,a.kt)("inlineCode",{parentName:"li"},"INFO"),"."),(0,a.kt)("li",{parentName:"ul"},"Restart application server on which D2 Smartview is deployed."),(0,a.kt)("li",{parentName:"ul"},"Reload D2-Smartview application in web-browser with additional query parameter ",(0,a.kt)("inlineCode",{parentName:"li"},"loglevel=info"),". ",(0,a.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Complete URL might look like ",(0,a.kt)("inlineCode",{parentName:"p"},"https://mydomain.com/D2-Smartview/ui?loglevel=info#d2"))))),(0,a.kt)("li",{parentName:"ul"},"Open console for the web-browser and check if some INFO level log output is present."),(0,a.kt)("li",{parentName:"ul"},"On the server-side open ",(0,a.kt)("strong",{parentName:"li"},"D2-Smartview.log")," file and check for the same statements as from web-browser console.")),(0,a.kt)("h3",{id:"source-code-structure"},"Source code structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"D2SV-Client2Server-Logging\n|\n|   pom.xml\n|   \n+---src\n|   \\---main\n|       +---java\n|       |   \\---com\n|       |       +---emc\n|       |       |       D2PluginVersion.java\n|       |       |       \n|       |       \\---opentext\n|       |           \\---d2\n|       |               +---rest\n|       |               |   \\---context\n|       |               |       \\---jc\n|       |               |               PluginRestConfig_C2SLogging.java\n|       |               |               \n|       |               \\---smartview\n|       |                   \\---c2slogging\n|       |                       |   C2SLoggingPlugin.java\n|       |                       |   \n|       |                       +---api\n|       |                       |       C2SLoggingVersion.java\n|       |                       |       \n|       |                       \\---rest\n|       |                           |   package-info.java\n|       |                           |   \n|       |                           +---api\n|       |                           |   |   IClientLogManager.java\n|       |                           |   |   \n|       |                           |   \\---impl\n|       |                           |           ClientLogManager.java\n|       |                           |           \n|       |                           +---controller\n|       |                           |       InboundExternalLogController.java\n|       |                           |       \n|       |                           \\---model\n|       |                                   HelpModel.java\n|       |                                   LogEntry.java\n|       |                                   LogLevel.java\n|       |                                   LogRequest.java\n|       |                                   \n|       +---resources\n|       |   |   c2slogging-version.properties\n|       |   |   D2Plugin.properties\n|       |   |   \n|       |   \\---smartview\n|       |           SmartView.properties\n|       |           \n|       \\---smartview\n|           |   .csslintrc\n|           |   .eslintrc-html.yml\n|           |   .eslintrc.yml\n|           |   .npmrc\n|           |   c2slogging.setup.js\n|           |   config-editor.js\n|           |   esmhelper.js\n|           |   Gruntfile.js\n|           |   package.json\n|           |   proxy.js\n|           |   server.conf.js\n|           |   server.js\n|           |           \n|           +---pages\n|           |   |   config-d2.js\n|           |   |   config-dev.js\n|           |   |   favicon.ico\n|           |   |   initialize.js\n|           |   |   loader.css\n|           |   |   otds.html\n|           |   |   redirect.html\n|           |   |   \n|           |   +---debug\n|           |   |       app.html\n|           |   |       \n|           |   \\---release\n|           |           app.html\n|           |           \n|           +---src\n|           |   |   c2slogging-init.js\n|           |   |   component.js\n|           |   |   config-build.js\n|           |   |   extensions.json\n|           |   |   Gruntfile.js\n|           |   |   \n|           |   +---bundles\n|           |   |       c2slogging-bundle.js\n|           |   |       \n|           |   +---test\n|           |   |       extensions.spec.js\n|           |   |       \n|           |   \\---utils\n|           |       |   startup.js\n|           |       |   \n|           |       \\---theme\n|           |           |   action.icons.js\n|           |           |   \n|           |           \\---action_icons\n|           |                   action_sample_icon.svg\n|           |                   \n|           \\---test\n|                   Gruntfile.js\n|                   karma.js\n|                   test-common.js\n|                   \n\\---target\n")),(0,a.kt)("h4",{id:"files-and-their-purpose"},"Files and their purpose"),(0,a.kt)("p",null,"Following are the list of function oriented source files and their purpose. Other source files present within the plugin are part of\ncommon infrastructure code and explained in ",(0,a.kt)("a",{parentName:"p",href:"../understand.d2sv.plugin"},"Understanding D2SV plugin project"),"."),(0,a.kt)("h6",{id:"rest-controller"},"REST Controller"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/rest/context/jc/PluginRestConfig_C2SLogging.java - Declares Spring Bean ",(0,a.kt)("inlineCode",{parentName:"li"},"IClientLogManager")," through ",(0,a.kt)("inlineCode",{parentName:"li"},"ClientLogManager"),"."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/api/IClientLogManager.java - Declares log manager interface for REST controllers to use."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/api/impl/ClientLogManager.java - Log manager implementation that parses and maps input log\nstatements and relays those statements into server side log."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/controller/InboundExternalLogController.java - Defines two REST endpoints, one receives HTTP POST request\nwith log statements as part of request body, the other responds to HTTP GET requests with help information on how to use the first endpoint."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/model/HelpModel.java - Serializable POJO that holds help information."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/model/LogEntry.java - Serializable POJO that represents a single log statement."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/model/LogLevel.java - Enum that represents D2SV client-side log levels."),(0,a.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/c2slogging/rest/model/LogRequest.java - Serializable POJO that holds a bunch of log statements together.")),(0,a.kt)("h6",{id:"requirejs-module-configuration"},"RequireJS module configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"src/main/smartview/src/c2slogging-init.js - This file is used to re-configure module ",(0,a.kt)("inlineCode",{parentName:"li"},"nuc/utils/log")," so that it channels log statements to the endpoint\ncreated by Java code from above. It also configures ",(0,a.kt)("inlineCode",{parentName:"li"},"nuc/lib/log4javascript")," to customize the request body format sent to the REST endpoint.",(0,a.kt)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The module ",(0,a.kt)("inlineCode",{parentName:"p"},"nuc/utils/log")," encapsulates the ",(0,a.kt)("inlineCode",{parentName:"p"},"log4javascript")," library and provides managed logging API to D2SV UI components."))))))}c.isMDXComponent=!0}}]);